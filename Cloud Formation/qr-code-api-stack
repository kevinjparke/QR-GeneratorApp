AWSTemplateFormatVersion: 2010-09-09
Description: Provisioned rsources for QR-Code generator API by Kevin J. Parke (B00905552)
Resources:
  ProjectS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: project-bucket-kv736815

  QRGenerator:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: project-lambda-files-kv736815
        S3Key: project_qr_generator.zip
      FunctionName: QRGenerator
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Role: 'arn:aws:iam::638997125533:role/LabRole'

  QRRetriever:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: project-lambda-files-kv736815
        S3Key: project_file_retriever.zip
      FunctionName: QRRetriever
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Role: 'arn:aws:iam::638997125533:role/LabRole'

  QRDelete:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: project-lambda-files-kv736815
        S3Key: project_file_remover.zip
      FunctionName: QRDelete
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Role: 'arn:aws:iam::638997125533:role/LabRole'

  ProjectStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString: !Sub 
        - "{\"Comment\":\"Adescriptionofmystatemachine\",\"StartAt\":\"Choice\",\"States\":{\"Choice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.type\",\"StringEquals\":\"GENERATE\",\"Next\":\"QRGeneratorInvoke\"},{\"Variable\":\"$.type\",\"StringEquals\":\"RETRIEVE\",\"Next\":\"FileRetrieveInvoke\"},{\"Variable\":\"$.type\",\"StringEquals\":\"DELETE\",\"Next\":\"RemoveFileInvoke\"}]},\"FileRetrieveInvoke\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:states:::lambda:invoke\",\"OutputPath\":\"$.Payload\",\"Parameters\":{\"Payload.$\":\"$\",\"FunctionName\":\"${retrievelambdaArn}\"},\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\",\"Lambda.TooManyRequestsException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"End\":true},\"QRGeneratorInvoke\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:states:::lambda:invoke\",\"OutputPath\":\"$.Payload\",\"Parameters\":{\"Payload.$\":\"$\",\"FunctionName\":\"${generatorlambdaArn}\"},\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\",\"Lambda.TooManyRequestsException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"End\":true},\"RemoveFileInvoke\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:states:::lambda:invoke\",\"OutputPath\":\"$.Payload\",\"Parameters\":{\"Payload.$\":\"$\",\"FunctionName\":\"${deletelambdaArn}\"},\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\",\"Lambda.TooManyRequestsException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"End\":true}}}"
        - { generatorlambdaArn: !GetAtt [ QRGenerator, Arn ], retrievelambdaArn: !GetAtt [QRRetriever, Arn], deletelambdaArn: !GetAtt [QRDelete, Arn] }
      RoleArn: 'arn:aws:iam::638997125533:role/LabRole'
      StateMachineName: project_state_machine_express_fn
      StateMachineType: 'EXPRESS'
    DependsOn:
      - QRDelete
      - QRRetriever
      - QRGenerator

  ProjectAPIGateway:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: 'project_api_gateway'
      Description: API Gateway for QR Code API
    DependsOn: 
      - ProjectStateMachine

  ProjectAPIMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ProjectAPIGateway
      ResourceId: !GetAtt ProjectAPIGateway.RootResourceId
      HttpMethod: 'POST'
      AuthorizationType: 'NONE'
      Integration:
        Type: 'AWS'
        IntegrationHttpMethod: 'POST'
        Credentials: 'arn:aws:iam::638997125533:role/LabRole'
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:states:action/StartSyncExecution'
        PassthroughBehavior: 'WHEN_NO_TEMPLATES'
        IntegrationResponses:
          - StatusCode: '200'
            ResponseTemplates:
              'application/json': "#set ($parsedPayload = $util.parseJson($input.json('$.output'))) $parsedPayload"
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            'application/json': 'Empty'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true

  ProjectAPIGatewayDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref ProjectAPIGateway
      StageName: 'alpha'
    DependsOn: 
      - ProjectAPIMethod

  ProjectBackupVault:
    Type: 'AWS::Backup::BackupVault'
    Properties:
      BackupVaultName: project-backup-vault

  ProjectBackupPlan:
    Type: 'AWS::Backup::BackupPlan'
    Properties:
      BackupPlan:
        BackupPlanName: project-backup-plan
        BackupPlanRule:
            - RuleName: daily-backup
              TargetBackupVault: !Ref ProjectBackupVault


  ProjectBackupSelection:
    Type: 'AWS::Backup::BackupSelection'
    Properties:
      BackupPlanId: !Ref ProjectBackupPlan
      BackupSelection:
        SelectionName: s3-backup-selection
        IamRoleArn: 'arn:aws:iam::638997125533:role/LabRole'
        Resources:
          - arn:aws:s3:::project-bucket-736815
          - arn:aws:s3:::project-bucket-736815/*
  
  